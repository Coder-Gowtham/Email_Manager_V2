version: '3.8'

services:
  backend:
    build:
      context: ./backend
    ports:
      - "5000:5000" # Map backend service to localhost:5000
    env_file:
      - ./backend/.env # Load environment variables
    depends_on:
      es01:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./backend:/app # Mount the code
      - /app/node_modules # Avoid mounting if node_modules should persist in container
    working_dir: /app
    command: >
      sh -c "npm install && npm run start"

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000" # Map frontend to localhost:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules # Avoid mounting if node_modules should persist in container
    working_dir: /app
    command: >
      sh -c "npm install && npm start"
    networks:
      - app-network

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=elastic@123
    ports:
      - "9201:9200"
      - "9300:9300"
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10


  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    environment:
      - ELASTICSEARCH_HOSTS=http://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_user
      - ELASTICSEARCH_PASSWORD=kibana_password
    ports:
      - "5602:5601"
    networks:
      - app-network
    depends_on:
      - es01
      - elasticsearch-setup

  elasticsearch-setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    environment:
      - ELASTIC_PASSWORD=elastic@123
    networks:
      - app-network
    depends_on:
      es01:
        condition: service_healthy
    entrypoint: |
      bash -c '
      # Wait for Elasticsearch to be fully available
      until curl -u elastic:elastic@123 -s http://es01:9200/_cat/health | grep -q green; do
        echo "Waiting for Elasticsearch..."
        sleep 5
      done
      # Create kibana_user with appropriate permissions
      bin/elasticsearch-users useradd kibana_user -p kibana_password -r kibana_system
      '
      
networks:
  app-network:
    driver: bridge
